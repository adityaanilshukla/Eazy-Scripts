#!/bin/bash

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Path to the .bluetooth.env file
ENV_FILE="$SCRIPT_DIR/.bluetooth.env"

# Source the environment file if it exists
if [ -f "$ENV_FILE" ]; then
  # shellcheck disable=SC1090
  source "$ENV_FILE"
else
  echo "Environment file $ENV_FILE not found."
  notify-send "Bluetooth Connect" "Missing .bluetooth.env file"
  exit 1
fi

connect_bluetooth() {
  if [ -z "$BT_HEADPHONES" ]; then
    echo "BT_HEADPHONES is not set."
    notify-send "Bluetooth Connect" "BT_HEADPHONES variable is not set."
    return 1
  fi

  echo "Scanning for $BT_HEADPHONES..."
  bluetoothctl --timeout 10 scan on >/dev/null &
  sleep 10
  bluetoothctl scan off >/dev/null

  # Confirm device shows up in list
  if ! bluetoothctl devices | grep -q "$BT_HEADPHONES"; then
    echo "Could not detect device $BT_HEADPHONES during scan."
    notify-send "Bluetooth Connect" "Device $BT_HEADPHONES not found during scan."
    return 1
  fi

  echo "Pairing with $BT_HEADPHONES..."
  bluetoothctl pair "$BT_HEADPHONES" >/dev/null
  sleep 2

  if bluetoothctl info "$BT_HEADPHONES" | grep -q "Paired: yes"; then
    echo "Device is paired."
  else
    echo "Pairing failed."
    notify-send "Bluetooth Connect" "Pairing failed for $BT_HEADPHONES"
    return 1
  fi

  echo "Trusting $BT_HEADPHONES..."
  bluetoothctl trust "$BT_HEADPHONES" >/dev/null
  sleep 1

  if bluetoothctl info "$BT_HEADPHONES" | grep -q "Trusted: yes"; then
    echo "Device is trusted."
  else
    echo "Trusting failed."
    notify-send "Bluetooth Connect" "Trusting failed for $BT_HEADPHONES"
    return 1
  fi

  echo "Connecting to $BT_HEADPHONES..."
  bluetoothctl connect "$BT_HEADPHONES" >/dev/null
  sleep 2

  if bluetoothctl info "$BT_HEADPHONES" | grep -q "Connected: yes"; then
    echo "Connected to $BT_HEADPHONES."
    notify-send "Bluetooth Connect" "Connected, paired, and trusted $BT_HEADPHONES"
    return 0
  else
    echo "Failed to connect to $BT_HEADPHONES."
    notify-send "Bluetooth Connect" "Connection failed for $BT_HEADPHONES"
    return 1
  fi
}

connect_bluetooth
